import * as grpc from "grpc";
import { SurfaceCall } from "grpc/build/src/call";
import { APIServiceClient } from "./client";
import { Trie, KeyValuesFilter, KeyValue, VerifyProofReply } from "../protos/api";
export declare function createTrie(cli: APIServiceClient, callback: grpc.requestCallback<Trie>): SurfaceCall;
export declare function createTriePromise(cli: APIServiceClient): Promise<Trie>;
export declare function deleteTrie(cli: APIServiceClient, id: string, callback: grpc.requestCallback<Trie>): SurfaceCall;
export declare function importTrie(cli: APIServiceClient, id: string, path: string, callback: grpc.requestCallback<Trie>): SurfaceCall;
export declare function exportTrie(cli: APIServiceClient, id: string, outputPath: string, callback: grpc.requestCallback<undefined>): SurfaceCall;
export declare function setTrieKeyValues(cli: APIServiceClient, id: string, root: string, iter: Iterable<KeyValue>, callback: grpc.requestCallback<Trie>): SurfaceCall;
export declare function createKeyValuesProof(cli: APIServiceClient, trieId: string, proofId: string, filter: KeyValuesFilter | null, outputPath: string, callback: grpc.requestCallback<undefined>): SurfaceCall;
export declare function verifyTrieProof(cli: APIServiceClient, trieId: string, proofId: string, callback: grpc.requestCallback<VerifyProofReply>, onKeyValue?: (kv: KeyValue) => void, dotGraphOutputPath?: string): SurfaceCall;
export declare function verifyKeyValuesProof(cli: APIServiceClient, path: string, callback: grpc.requestCallback<VerifyProofReply>, onKeyValue?: (kv: KeyValue) => void, dotGraphOutputPath?: string): SurfaceCall;
export declare function verifyKeyValuesProofPromise(cli: APIServiceClient, path: string, outputKeyValues?: boolean, dotGraphOutputPath?: string): AsyncIterable<KeyValue | VerifyProofReply>;
